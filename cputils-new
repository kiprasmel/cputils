#!/usr/bin/env bash

CFGDIR="$HOME/.config/cputils"

USAGE="\
usage:

cputils-new NEW_FILENAME.EXTENSION [OPTIONS]

  where
    NEW_FILENAME      = the name of a new file
  
    EXTENSION         = the file extension (not limited to \"cpp\" -
                                            you can create templates for various langs)

    -t TEMPLATE_ID    = use template by id (template.TEMPLATE_ID.EXTENSION)
                        default: unset, thus \"template.cpp\"

                        templates should be added to the config directory
                        (\"\$HOME/.config/cputils\"),
                        named \"template.TEMPLATE_ID.EXTENSION\",
                        e.g.  \"template.t.cpp\" (maybe a regular template with test cases?),
                              \"template.py\"    (default for python files),
                              \"template.js\"    (default for javascript files) etc.
  
    -y                = non-interactive (do not open file with editor etc.)
                        default: false

    -i                = interactive (overrides previous \`-y\`)
                        default: true
                        will open created file with editor
                        if editor specified and enabled in the config

    -h, --help        = show this


  examples:
    cputils-new a.cpp               # create file a.cpp from default template.cpp
    cputils-new b.cpp -t t          # create file b.cpp from         template.t.cpp
    cputils-new c.py                # create file c.py  from default template.py
    cputils-new d.js                # create file d.js  from default template.js

"

#
# https://stackoverflow.com/a/4170409/9285308
#
while (( $# )); do
	case "$1" in 
		-t)
			shift
			TEMPLATE_ID="$1"
			shift
			;;
		-t*)
			TEMPLATE_ID="${1#*t}"
			shift
			;;

		-y)
			shift
			NON_INTERACTIVE=1
			;;
		-i)
			shift
			NON_INTERACTIVE=0
			;;

		-h|--help)
			shift
			printf "$USAGE"
			exit 0
			;;

		*)  [ -z "$FULL_FILENAME" ] && {
				FULL_FILENAME="$1"
				shift
			} || {
				printf "\nerror: unrecognized option: $1\n\n"

				printf "$USAGE"

				printf "\nerror: unrecognized option: $1\n\n"

				exit 1
			}
			;;
	esac
done

[ -z "$FULL_FILENAME" ] && {
	printf "$USAGE"
	exit 1
}

[ -z "$NON_INTERACTIVE" ] && NON_INTERACTIVE=0

FILENAME="${FULL_FILENAME%.*}"
EXTENSION="${FULL_FILENAME##*.}"

[ -z "$TEMPLATE_ID" ] && {
	TEMPLATE="$CFGDIR/template.$EXTENSION" 
} || {
	TEMPLATE="$CFGDIR/template.$TEMPLATE_ID.$EXTENSION"
}

[ ! -f "$TEMPLATE" ] && {
	printf "\
cputils-new error:

template does not exist ($TEMPLATE)

you have the following templates:

$(ls "$CFGDIR" | grep '^template\.')

consult \`cputils-new -h\`

"
	exit 1
}

cp -i -v "$TEMPLATE" "$FULL_FILENAME"

[ "$NON_INTERACTIVE" -eq 0 ] && {
	source "$CFGDIR/cputils.config.bash"
	open_with_editor "$FULL_FILENAME"
	OPEN_WITH_EDITOR_RETURN_STATUS=$?

	[ "$OPEN_WITH_EDITOR_RETURN_STATUS" -ne 0 ] && {
		printf "
cputils-new: warning

open_with_editor (function from config) exited with non-zero code ($OPEN_WITH_EDITOR_RETURN_STATUS)

"

	}
}

